
```markdown
# Advanced Repository Cloner

A cross-platform tool to clone all repositories from GitHub/GitLab/Bitbucket organizations with smart filtering and pause/resume controls.

## Features

- ‚úÖ **Auto-skip existing repos** - Never re-clones duplicates
- üîÑ **Spinner animation** - Visual feedback during cloning (`../`, `..\`, etc.)
- ‚èØÔ∏è **Pause/Resume** - Press `Enter` anytime to pause
- ‚è© **Skip repos** - Press `s` while paused to skip current repo
- üåê **Cross-platform** - Works on Windows (CMD/PowerShell) and Linux/Mac
- üîç **Fork detection** - Optionally exclude forked repositories
- üé® **Colorized output** - Clear status indicators (enable ANSI in CMD)

## Installation

```bash
pip install requests
```

## Usage

### Basic Scan (Skips Forks)
```bash
python cloner.py github.com/sophos
```

### Deep Scan (Includes Forks)
```bash
python cloner.py --scan-forks github.com/sophos
```

### Windows CMD Setup (For Colors)
```cmd
reg add HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1
```
Restart your terminal after running this.

## Controls
| Action               | Command          |
|----------------------|------------------|
| Pause cloning        | Press `Enter`    |
| Resume cloning       | Press `Enter`    |
| Skip current repo    | Press `s` then `Enter` |

## Output Examples
```text
[‚úì] Cloned: awesome-repo ../
[=] Skipped: duplicate-repo (exists)
[‚úó] Skipped: broken-repo (max retries)
[‚è∏] PAUSED on: large-repo
[‚è©] SKIPPED: large-repo
```

## Configuration
Edit `api_keys` in the script to add your personal access tokens for private repos.

**Note:** For large organizations, consider using `--scan-forks` only when needed as it significantly increases scan time.
```

Key points:
1. Clear feature list with emoji visual cues
2. Windows-specific color setup instructions
3. Compact command reference table
4. Real output examples
5. Configuration note at the bottom

Would you like me to add any specific troubleshooting steps or advanced usage examples?
